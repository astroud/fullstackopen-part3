{"version":3,"sources":["Components/FilterField.js","services/people.js","Components/Directory.js","Components/PersonForm.js","Components/Notification.js","App.js","index.js"],"names":["FilterField","handleFilterChange","onChange","baseUrl","peopleService","getAll","axios","get","then","response","data","add","newName","newPhone","people","post","name","number","concat","remove","id","setPeople","setIsError","setNotificationMsg","hideNotification","request","delete","window","confirm","console","log","filter","person","catch","error","update","put","Directory","title","searchTerm","toLowerCase","filteredPeople","includes","map","onClick","PersonForm","addName","handlePersonChange","handlePhoneChange","onSubmit","value","required","type","Notification","message","length","className","App","useState","setNewName","setNewPhone","setNewFilter","notificationMsg","isError","useEffect","initialPeople","clearFields","seconds","setTimeout","event","target","preventDefault","messageError","savedNames","savedName","duplicateName","returnedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cd1d274.chunk.js","sourcesContent":["import React from 'react'\n\nconst FilterField = ({ handleFilterChange }) => {\n  return(\n    <>\n      <form>\n        <div>\n          filter names by:\n            <input onChange={handleFilterChange} />\n      </div>\n      </form>\n    </>\n  )\n}\n\nexport default FilterField","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst add = ( newName, newPhone, people) => {\n  const request = axios\n                    .post(baseUrl,\n                          { name: newName, number: newPhone })\n  return request.then(response => people.concat(response.data))\n}\n\nconst remove = (id, name, people, setPeople,\n                setIsError, setNotificationMsg, hideNotification) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n\n  if(window.confirm(`Delete ${name}?`)) {\n    request\n      .then( () => {\n        console.log('remove person from state here');\n        setPeople(\n          people.filter(person => person.id !== id)\n        )\n      })\n      .catch(error => {\n        console.log(`'${name}' was already deleted from server`)\n        setIsError(true)\n        setNotificationMsg(`'${name}' was already deleted from server`)\n        hideNotification()\n      })\n  }\n}\n\nconst update = (id, newName, newPhone) => {\n  const request = axios.put(`${baseUrl}/${id}`,\n                    { id: id, name: newName, number: newPhone })\n  return request.then(response => response.data)\n}\n\nconst peopleService = { getAll, add, remove, update }\nexport default peopleService","import React from 'react'\nimport peopleService from '../services/people'\n\nconst Directory = ({  people, setPeople, filter, title,\n                      setIsError, setNotificationMsg, hideNotification }) => {\n  const searchTerm = filter.toLowerCase()\n\n  let filteredPeople = \n    people.filter(person =>\n                  person.name.toLowerCase().includes(searchTerm))\n  return(\n    <>\n      <h2>{title}</h2>\n      <ul>\n        {filteredPeople.map(person =>\n          <li key={person.id}>\n            {person.name} {person.number} \n            <button key={person.id}\n                    onClick={() => {\n                      peopleService.remove( person.id,\n                                            person.name,\n                                            people,\n                                            setPeople,\n                                            setIsError,\n                                            setNotificationMsg,\n                                            hideNotification )\n                    }}\n            >delete</button>\n          </li>\n        )}\n      </ul>\n    </>\n  )\n}\n\nexport default Directory","import React from 'react'\n\nconst PersonForm = ({ addName, newName, handlePersonChange,\n                  newPhone, handlePhoneChange, title }) => {\n  return(\n    <>\n    <h2>{title}</h2>\n    <form onSubmit={addName}>\n      <div>\n        name: <input\n                value={newName}\n                onChange={handlePersonChange}\n                required={true}\n              />\n      </div>\n      <div>\n        number: <input\n                value={newPhone}\n                onChange={handlePhoneChange}\n                required={true}\n              />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n    </>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n  if(message.length === 0) {\n    return(null)\n  }\n\n  return(\n    <div className={`notification ${error ? 'notification--error': ''}`}>{message}</div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport FilterField from './Components/FilterField'\nimport Directory from './Components/Directory'\nimport PersonForm from './Components/PersonForm'\nimport peopleService from './services/people'\nimport Notification from './Components/Notification'\n\nconst App = () => {\n  const [ people, setPeople ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [ notificationMsg, setNotificationMsg ] = useState('')\n  const [ isError, setIsError ] = useState(false)\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPeople => { setPeople(initialPeople) })\n  }, []);\n\n  const clearFields = () => {\n    setNewName('')\n    setNewPhone('')\n  }\n\n  // TODO: Fix so only success messages are auto-hidden\n  const hideNotification = (seconds=5) => {\n    setTimeout(() => {\n      setNotificationMsg('')\n    }, seconds * 1000)\n  }\n\n  const duplicateName = (newName, savedNames) => {\n    let filteredNames = savedNames.filter(\n          savedName => savedName.name.toLowerCase() === newName.toLowerCase())\n    return filteredNames.length === 0 ? false : true \n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const message = `${newName} is already in the phonebook, do you want to update the number?`\n\n    const messageSuccess = () => {\n      setIsError(false)\n      setNotificationMsg(`${newName} has been saved to the phone book.`)\n      // hideNotification()\n      clearFields()\n    }\n\n    const messageError = (error) => {\n      console.log(error.response.data)\n      setIsError(true)\n      setNotificationMsg(`${error.response.data.error}`)\n    }\n\n    if(duplicateName(newName, people)) {\n      if(window.confirm(message)) {      \n        const id = people\n                    .filter(person => \n                      person.name.toLowerCase() === newName.toLowerCase()\n                    )[0].id\n                    \n        peopleService\n          .update(id, newName, newPhone)\n          .then(returnedPerson => {\n            setPeople(people.map(person => person.id !== id ? person : returnedPerson))\n            \n            setIsError(false)\n            setNotificationMsg(`${newName} has been updated in the phone book.`)\n            hideNotification()\n            clearFields()\n          })\n          .catch(error => messageError(error))\n      }\n    }\n    else {\n      peopleService.add(newName, newPhone, people, setPeople)\n        .then(people => setPeople(people))\n        .then(messageSuccess())\n        .catch(error => messageError(error))\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <Notification\n        message={notificationMsg}\n        error={isError}\n      />\n      <h2>Phonebook</h2>\n      <FilterField handleFilterChange={handleFilterChange} />\n      <PersonForm addName={addName}\n                  newName={newName}\n                  handlePersonChange={handlePersonChange}\n                  newPhone={newPhone}\n                  handlePhoneChange={handlePhoneChange}\n                  title=\"Add a new entry\"\n      />\n      <Directory  people={people}\n                  setPeople={setPeople}\n                  filter={filter}\n                  title=\"Numbers\"\n                  setIsError={setIsError}\n                  setNotificationMsg={setNotificationMsg}\n                  hideNotification={hideNotification}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}